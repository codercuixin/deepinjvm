Classfile /D:/IdeaProject/deepinjvm/src/main/java/lecture23/EscapeTest.class
  Last modified 2019-10-28; size 1597 bytes
  MD5 checksum 682156dab052e1a02f82af8ecfe0212d
  Compiled from "EscapeTest.java"
public class lecture23.EscapeTest
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #14.#32        // java/lang/Object."<init>":()V
   #2 = Methodref          #6.#33         // java/util/ArrayList.iterator:()Ljava/util/Iterator;
   #3 = InterfaceMethodref #34.#35        // java/util/Iterator.hasNext:()Z
   #4 = InterfaceMethodref #34.#36        // java/util/Iterator.next:()Ljava/lang/Object;
   #5 = InterfaceMethodref #37.#38        // java/util/function/Consumer.accept:(Ljava/lang/Object;)V
   #6 = Class              #39            // java/util/ArrayList
   #7 = Methodref          #6.#32         // java/util/ArrayList."<init>":()V
   #8 = Methodref          #40.#41        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #9 = Methodref          #6.#42         // java/util/ArrayList.add:(Ljava/lang/Object;)Z
  #10 = Integer            400000000
  #11 = InvokeDynamic      #0:#47         // #0:accept:()Ljava/util/function/Consumer;
  #12 = Methodref          #13.#48        // lecture23/EscapeTest.forEach:(Ljava/util/ArrayList;Ljava/util/function/Consumer;)V
  #13 = Class              #49            // lecture23/EscapeTest
  #14 = Class              #50            // java/lang/Object
  #15 = Utf8               <init>
  #16 = Utf8               ()V
  #17 = Utf8               Code
  #18 = Utf8               LineNumberTable
  #19 = Utf8               forEach
  #20 = Utf8               (Ljava/util/ArrayList;Ljava/util/function/Consumer;)V
  #21 = Utf8               StackMapTable
  #22 = Class              #51            // java/util/Iterator
  #23 = Utf8               Signature
  #24 = Utf8               (Ljava/util/ArrayList<Ljava/lang/Object;>;Ljava/util/function/Consumer<Ljava/lang/Object;>;)V
  #25 = Utf8               main
  #26 = Utf8               ([Ljava/lang/String;)V
  #27 = Class              #39            // java/util/ArrayList
  #28 = Utf8               lambda$main$0
  #29 = Utf8               (Ljava/lang/Object;)V
  #30 = Utf8               SourceFile
  #31 = Utf8               EscapeTest.java
  #32 = NameAndType        #15:#16        // "<init>":()V
  #33 = NameAndType        #52:#53        // iterator:()Ljava/util/Iterator;
  #34 = Class              #51            // java/util/Iterator
  #35 = NameAndType        #54:#55        // hasNext:()Z
  #36 = NameAndType        #56:#57        // next:()Ljava/lang/Object;
  #37 = Class              #58            // java/util/function/Consumer
  #38 = NameAndType        #59:#29        // accept:(Ljava/lang/Object;)V
  #39 = Utf8               java/util/ArrayList
  #40 = Class              #60            // java/lang/Integer
  #41 = NameAndType        #61:#62        // valueOf:(I)Ljava/lang/Integer;
  #42 = NameAndType        #63:#64        // add:(Ljava/lang/Object;)Z
  #43 = Utf8               BootstrapMethods
  #44 = MethodHandle       #6:#65         // invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #45 = MethodType         #29            //  (Ljava/lang/Object;)V
  #46 = MethodHandle       #6:#66         // invokestatic lecture23/EscapeTest.lambda$main$0:(Ljava/lang/Object;)V
  #47 = NameAndType        #59:#67        // accept:()Ljava/util/function/Consumer;
  #48 = NameAndType        #19:#20        // forEach:(Ljava/util/ArrayList;Ljava/util/function/Consumer;)V
  #49 = Utf8               lecture23/EscapeTest
  #50 = Utf8               java/lang/Object
  #51 = Utf8               java/util/Iterator
  #52 = Utf8               iterator
  #53 = Utf8               ()Ljava/util/Iterator;
  #54 = Utf8               hasNext
  #55 = Utf8               ()Z
  #56 = Utf8               next
  #57 = Utf8               ()Ljava/lang/Object;
  #58 = Utf8               java/util/function/Consumer
  #59 = Utf8               accept
  #60 = Utf8               java/lang/Integer
  #61 = Utf8               valueOf
  #62 = Utf8               (I)Ljava/lang/Integer;
  #63 = Utf8               add
  #64 = Utf8               (Ljava/lang/Object;)Z
  #65 = Methodref          #68.#69        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #66 = Methodref          #13.#70        // lecture23/EscapeTest.lambda$main$0:(Ljava/lang/Object;)V
  #67 = Utf8               ()Ljava/util/function/Consumer;
  #68 = Class              #71            // java/lang/invoke/LambdaMetafactory
  #69 = NameAndType        #72:#76        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #70 = NameAndType        #28:#29        // lambda$main$0:(Ljava/lang/Object;)V
  #71 = Utf8               java/lang/invoke/LambdaMetafactory
  #72 = Utf8               metafactory
  #73 = Class              #78            // java/lang/invoke/MethodHandles$Lookup
  #74 = Utf8               Lookup
  #75 = Utf8               InnerClasses
  #76 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #77 = Class              #79            // java/lang/invoke/MethodHandles
  #78 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #79 = Utf8               java/lang/invoke/MethodHandles
{
  public lecture23.EscapeTest();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 10: 0

  public static void forEach(java.util.ArrayList<java.lang.Object>, java.util.function.Consumer<java.lang.Object>);
    descriptor: (Ljava/util/ArrayList;Ljava/util/function/Consumer;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #2                  // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
         4: astore_2
         5: aload_2
         6: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
        11: ifeq          31
        14: aload_2
        15: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        20: astore_3
        21: aload_1
        22: aload_3
        23: invokeinterface #5,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
        28: goto          5
        31: return
      LineNumberTable:
        line 12: 0
        line 13: 21
        line 14: 28
        line 15: 31
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 25
    Signature: #24                          // (Ljava/util/ArrayList<Ljava/lang/Object;>;Ljava/util/function/Consumer<Ljava/lang/Object;>;)V

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=1
         0: new           #6                  // class java/util/ArrayList
         3: dup
         4: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
         7: astore_1
         8: iconst_0
         9: istore_2
        10: iload_2
        11: bipush        100
        13: if_icmpge     31
        16: aload_1
        17: iload_2
        18: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        21: invokevirtual #9                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
        24: pop
        25: iinc          2, 1
        28: goto          10
        31: iconst_0
        32: istore_2
        33: iload_2
        34: ldc           #10                 // int 400000000
        36: if_icmpge     54
        39: aload_1
        40: invokedynamic #11,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
        45: invokestatic  #12                 // Method forEach:(Ljava/util/ArrayList;Ljava/util/function/Consumer;)V
        48: iinc          2, 1
        51: goto          33
        54: return
      LineNumberTable:
        line 17: 0
        line 18: 8
        line 19: 16
        line 18: 25
        line 21: 31
        line 22: 39
        line 21: 48
        line 24: 54
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ class java/util/ArrayList, int ]
        frame_type = 250 /* chop */
          offset_delta = 20
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 20

  private static void lambda$main$0(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 22: 0
}
SourceFile: "EscapeTest.java"
InnerClasses:
     public static final #74= #73 of #77; //Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
BootstrapMethods:
  0: #44 invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)V
      #46 invokestatic lecture23/EscapeTest.lambda$main$0:(Ljava/lang/Object;)V
      #45 (Ljava/lang/Object;)V
